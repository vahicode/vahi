import Prisma from '@prisma/client'
import config from '../vahi.config.mjs'
import { capitalize, generatePassword } from '../api/utils.mjs'
import kleur from 'kleur'
import { vascii } from '../api/utils.mjs'

const { PrismaClient } = Prisma
const prisma = new PrismaClient()

const email = 'root@vahi.eu'

const seed = async () => {
  console.log(`
  ${kleur.green(vascii)}
  🐤  Seeding VaHI database...
  `)
  // Store admin accounts so we can report on them later
  const admins = []

  // Create admin account
  const [pwd, hash, salt] = generatePassword(config.root.password)
  console.log(`  ✅  Creating ${kleur.yellow('admin')}: ${kleur.green(config.root.email)}`)
  await prisma.Admin.upsert({
    where: {
      email: config.root.email
    },
    update: {},
    create: {
      email: config.root.email,
      createdBy: config.root.email,
      isActive: true,
      notes: 'Superadmin generated by the initial datbase seed script',
      password: `${hash}:${salt}`,
      role: 'superadmin',
    }
  })
  admins.push({ email: config.root.email, password: pwd })

  // Create demo user
  console.log(`  ✅  Creating ${kleur.yellow('user')}: ${kleur.green('demo')}`)
  await prisma.User.upsert({
    where: { id: 'demo' },
    update: {},
    create: {
      createdBy: config.root.email,
      id: 'demo',
      isActive: true,
      isDemoUser: true,
      notes: 'Demo user generated by teh initial database seed script',
    }
  })

  console.log(' ')
  console.log(`  ✨ All done. These admin accounts where created:`)
  for (const admin of admins) {
    console.log(`  
    ${kleur.bold('Username')}: ${kleur.cyan(admin.email)}
    ${kleur.bold('Password')}: ${kleur.cyan(admin.password)}

    `)
  }
  console.log(`  🗒️  Make a note of the ${kleur.cyan('password')} because we won't show it again
    `)

  return 
}

seed()
